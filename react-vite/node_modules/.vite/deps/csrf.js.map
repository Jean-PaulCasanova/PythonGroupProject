{
  "version": 3,
  "sources": ["browser-external:assert", "../../../../../../../node_modules/rndm/index.js", "browser-external:crypto", "../../../../../../../node_modules/random-bytes/index.js", "../../../../../../../node_modules/uid-safe/index.js", "../../../../../../../node_modules/tsscmp/lib/index.js", "../../../../../../../node_modules/csrf/index.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"assert\" has been externalized for browser compatibility. Cannot access \"assert.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "\nvar assert = require('assert')\n\nvar base62 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\nvar base36 = 'abcdefghijklmnopqrstuvwxyz0123456789'\nvar base10 = '0123456789'\n\nexports = module.exports = create(base62)\nexports.base62 = exports\nexports.base36 = create(base36)\nexports.base10 = create(base10)\n\nexports.create = create\n\nfunction create(chars) {\n  assert(typeof chars === 'string', 'the list of characters must be a string!')\n  var length = Buffer.byteLength(chars)\n  return function rndm(len) {\n    len = len || 10\n    assert(typeof len === 'number' && len >= 0, 'the length of the random string must be a number!')\n    var salt = ''\n    for (var i = 0; i < len; i++) salt += chars[Math.floor(length * Math.random())]\n    return salt\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/*!\n * random-bytes\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\n\n/**\n * Module variables.\n * @private\n */\n\nvar generateAttempts = crypto.randomBytes === crypto.pseudoRandomBytes ? 1 : 3\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = randomBytes\nmodule.exports.sync = randomBytesSync\n\n/**\n * Generates strong pseudo-random bytes.\n *\n * @param {number} size\n * @param {function} [callback]\n * @return {Promise}\n * @public\n */\n\nfunction randomBytes(size, callback) {\n  // validate callback is a function, if provided\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!callback && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  if (callback) {\n    // classic callback style\n    return generateRandomBytes(size, generateAttempts, callback)\n  }\n\n  return new Promise(function executor(resolve, reject) {\n    generateRandomBytes(size, generateAttempts, function onRandomBytes(err, str) {\n      if (err) return reject(err)\n      resolve(str)\n    })\n  })\n}\n\n/**\n * Generates strong pseudo-random bytes sync.\n *\n * @param {number} size\n * @return {Buffer}\n * @public\n */\n\nfunction randomBytesSync(size) {\n  var err = null\n\n  for (var i = 0; i < generateAttempts; i++) {\n    try {\n      return crypto.randomBytes(size)\n    } catch (e) {\n      err = e\n    }\n  }\n\n  throw err\n}\n\n/**\n * Generates strong pseudo-random bytes.\n *\n * @param {number} size\n * @param {number} attempts\n * @param {function} callback\n * @private\n */\n\nfunction generateRandomBytes(size, attempts, callback) {\n  crypto.randomBytes(size, function onRandomBytes(err, buf) {\n    if (!err) return callback(null, buf)\n    if (!--attempts) return callback(err)\n    setTimeout(generateRandomBytes.bind(null, size, attempts, callback), 10)\n  })\n}\n", "/*!\n * uid-safe\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar randomBytes = require('random-bytes')\n\n/**\n * Module variables.\n * @private\n */\n\nvar EQUAL_END_REGEXP = /=+$/\nvar PLUS_GLOBAL_REGEXP = /\\+/g\nvar SLASH_GLOBAL_REGEXP = /\\//g\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = uid\nmodule.exports.sync = uidSync\n\n/**\n * Create a unique ID.\n *\n * @param {number} length\n * @param {function} [callback]\n * @return {Promise}\n * @public\n */\n\nfunction uid (length, callback) {\n  // validate callback is a function, if provided\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!callback && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  if (callback) {\n    // classic callback style\n    return generateUid(length, callback)\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    generateUid(length, function onUid (err, str) {\n      if (err) return reject(err)\n      resolve(str)\n    })\n  })\n}\n\n/**\n * Create a unique ID sync.\n *\n * @param {number} length\n * @return {string}\n * @public\n */\n\nfunction uidSync (length) {\n  return toString(randomBytes.sync(length))\n}\n\n/**\n * Generate a unique ID string.\n *\n * @param {number} length\n * @param {function} callback\n * @private\n */\n\nfunction generateUid (length, callback) {\n  randomBytes(length, function (err, buf) {\n    if (err) return callback(err)\n    callback(null, toString(buf))\n  })\n}\n\n/**\n * Change a Buffer into a string.\n *\n * @param {Buffer} buf\n * @return {string}\n * @private\n */\n\nfunction toString (buf) {\n  return buf.toString('base64')\n    .replace(EQUAL_END_REGEXP, '')\n    .replace(PLUS_GLOBAL_REGEXP, '-')\n    .replace(SLASH_GLOBAL_REGEXP, '_')\n}\n", "'use strict';\r\n\r\n// Implements Brad Hill's Double HMAC pattern from\r\n// https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/.\r\n// The approach is similar to the node's native implementation of timing safe buffer comparison that will be available on v6+.\r\n// https://github.com/nodejs/node/issues/3043\r\n// https://github.com/nodejs/node/pull/3073\r\n\r\nvar crypto = require('crypto');\r\n\r\nfunction bufferEqual(a, b) {\r\n  if (a.length !== b.length) {\r\n    return false;\r\n  }\r\n  // `crypto.timingSafeEqual` was introduced in Node v6.6.0\r\n  // <https://github.com/jshttp/basic-auth/issues/39>\r\n  if (crypto.timingSafeEqual) {\r\n    return crypto.timingSafeEqual(a, b);\r\n  }\r\n  for (var i = 0; i < a.length; i++) {\r\n    if (a[i] !== b[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction timeSafeCompare(a, b) {\r\n  var sa = String(a);\r\n  var sb = String(b);\r\n  var key = crypto.pseudoRandomBytes(32);\r\n  var ah = crypto.createHmac('sha256', key).update(sa).digest();\r\n  var bh = crypto.createHmac('sha256', key).update(sb).digest();\r\n\r\n  return bufferEqual(ah, bh) && a === b;\r\n}\r\n\r\nmodule.exports = timeSafeCompare;\r\n", "/*!\n * csrf\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar rndm = require('rndm')\nvar uid = require('uid-safe')\nvar compare = require('tsscmp')\nvar crypto = require('crypto')\n\n/**\n * Module variables.\n * @private\n */\n\nvar EQUAL_GLOBAL_REGEXP = /=/g\nvar PLUS_GLOBAL_REGEXP = /\\+/g\nvar SLASH_GLOBAL_REGEXP = /\\//g\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Tokens\n\n/**\n * Token generation/verification class.\n *\n * @param {object} [options]\n * @param {number} [options.saltLength=8] The string length of the salt\n * @param {number} [options.secretLength=18] The byte length of the secret key\n * @public\n */\n\nfunction Tokens (options) {\n  if (!(this instanceof Tokens)) {\n    return new Tokens(options)\n  }\n\n  var opts = options || {}\n\n  var saltLength = opts.saltLength !== undefined\n    ? opts.saltLength\n    : 8\n\n  if (typeof saltLength !== 'number' || !isFinite(saltLength) || saltLength < 1) {\n    throw new TypeError('option saltLength must be finite number > 1')\n  }\n\n  var secretLength = opts.secretLength !== undefined\n    ? opts.secretLength\n    : 18\n\n  if (typeof secretLength !== 'number' || !isFinite(secretLength) || secretLength < 1) {\n    throw new TypeError('option secretLength must be finite number > 1')\n  }\n\n  this.saltLength = saltLength\n  this.secretLength = secretLength\n}\n\n/**\n * Create a new CSRF token.\n *\n * @param {string} secret The secret for the token.\n * @public\n */\n\nTokens.prototype.create = function create (secret) {\n  if (!secret || typeof secret !== 'string') {\n    throw new TypeError('argument secret is required')\n  }\n\n  return this._tokenize(secret, rndm(this.saltLength))\n}\n\n/**\n * Create a new secret key.\n *\n * @param {function} [callback]\n * @public\n */\n\nTokens.prototype.secret = function secret (callback) {\n  return uid(this.secretLength, callback)\n}\n\n/**\n * Create a new secret key synchronously.\n * @public\n */\n\nTokens.prototype.secretSync = function secretSync () {\n  return uid.sync(this.secretLength)\n}\n\n/**\n * Tokenize a secret and salt.\n * @private\n */\n\nTokens.prototype._tokenize = function tokenize (secret, salt) {\n  return salt + '-' + hash(salt + '-' + secret)\n}\n\n/**\n * Verify if a given token is valid for a given secret.\n *\n * @param {string} secret\n * @param {string} token\n * @public\n */\n\nTokens.prototype.verify = function verify (secret, token) {\n  if (!secret || typeof secret !== 'string') {\n    return false\n  }\n\n  if (!token || typeof token !== 'string') {\n    return false\n  }\n\n  var index = token.indexOf('-')\n\n  if (index === -1) {\n    return false\n  }\n\n  var salt = token.substr(0, index)\n  var expected = this._tokenize(secret, salt)\n\n  return compare(token, expected)\n}\n\n/**\n * Hash a string with SHA1, returning url-safe base64\n * @param {string} str\n * @private\n */\n\nfunction hash (str) {\n  return crypto\n    .createHash('sha1')\n    .update(str, 'ascii')\n    .digest('base64')\n    .replace(PLUS_GLOBAL_REGEXP, '-')\n    .replace(SLASH_GLOBAL_REGEXP, '_')\n    .replace(EQUAL_GLOBAL_REGEXP, '')\n}\n"],
  "mappings": "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",
  "names": []
}
